//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: SourceParameters_Dcps.h
//  Source: /home/rameez/ADAS_ROS2/ADAS_ws/src/ADASPackage/rosidl_typesupport_opensplice_cpp/adas_pipeline/msg/dds_opensplice/SourceParameters_Dcps.idl
//  Generated: Thu Mar 24 10:52:16 2016
//  OpenSplice V6.4.140407OSS
//  
//******************************************************************
#ifndef _SOURCEPARAMETERS_DCPS_H_
#define _SOURCEPARAMETERS_DCPS_H_

#include "sacpp_mapping.h"
#include "sacpp_DDS_DCPS.h"
#include "SourceParameters_.h"
#include "dds_dcps.h"


namespace adas_pipeline
{
   namespace msg
   {
      namespace dds_
      {

         class SourceParameters_TypeSupportInterface;

         typedef SourceParameters_TypeSupportInterface * SourceParameters_TypeSupportInterface_ptr;
         typedef DDS_DCPSInterface_var < SourceParameters_TypeSupportInterface> SourceParameters_TypeSupportInterface_var;
         typedef DDS_DCPSInterface_out < SourceParameters_TypeSupportInterface> SourceParameters_TypeSupportInterface_out;


         class SourceParameters_DataWriter;

         typedef SourceParameters_DataWriter * SourceParameters_DataWriter_ptr;
         typedef DDS_DCPSInterface_var < SourceParameters_DataWriter> SourceParameters_DataWriter_var;
         typedef DDS_DCPSInterface_out < SourceParameters_DataWriter> SourceParameters_DataWriter_out;


         class SourceParameters_DataReader;

         typedef SourceParameters_DataReader * SourceParameters_DataReader_ptr;
         typedef DDS_DCPSInterface_var < SourceParameters_DataReader> SourceParameters_DataReader_var;
         typedef DDS_DCPSInterface_out < SourceParameters_DataReader> SourceParameters_DataReader_out;


         class SourceParameters_DataReaderView;

         typedef SourceParameters_DataReaderView * SourceParameters_DataReaderView_ptr;
         typedef DDS_DCPSInterface_var < SourceParameters_DataReaderView> SourceParameters_DataReaderView_var;
         typedef DDS_DCPSInterface_out < SourceParameters_DataReaderView> SourceParameters_DataReaderView_out;

         struct SourceParameters_Seq_uniq_ {};
         typedef DDS_DCPSUVLSeq < SourceParameters_, struct SourceParameters_Seq_uniq_> SourceParameters_Seq;
         typedef DDS_DCPSSequence_var < SourceParameters_Seq> SourceParameters_Seq_var;
         typedef DDS_DCPSSequence_out < SourceParameters_Seq> SourceParameters_Seq_out;
         class SourceParameters_TypeSupportInterface
         :
            virtual public DDS::TypeSupport
         { 
         public:
            typedef SourceParameters_TypeSupportInterface_ptr _ptr_type;
            typedef SourceParameters_TypeSupportInterface_var _var_type;

            static SourceParameters_TypeSupportInterface_ptr _duplicate (SourceParameters_TypeSupportInterface_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static SourceParameters_TypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
            static SourceParameters_TypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static SourceParameters_TypeSupportInterface_ptr _nil () { return 0; }
            static const char * _local_id;
            SourceParameters_TypeSupportInterface_ptr _this () { return this; }


         protected:
            SourceParameters_TypeSupportInterface () {};
            ~SourceParameters_TypeSupportInterface () {};
         private:
            SourceParameters_TypeSupportInterface (const SourceParameters_TypeSupportInterface &);
            SourceParameters_TypeSupportInterface & operator = (const SourceParameters_TypeSupportInterface &);
         };

         class SourceParameters_DataWriter
         :
            virtual public DDS::DataWriter
         { 
         public:
            typedef SourceParameters_DataWriter_ptr _ptr_type;
            typedef SourceParameters_DataWriter_var _var_type;

            static SourceParameters_DataWriter_ptr _duplicate (SourceParameters_DataWriter_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static SourceParameters_DataWriter_ptr _narrow (DDS::Object_ptr obj);
            static SourceParameters_DataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static SourceParameters_DataWriter_ptr _nil () { return 0; }
            static const char * _local_id;
            SourceParameters_DataWriter_ptr _this () { return this; }

            virtual DDS::LongLong register_instance (const SourceParameters_& instance_data) = 0;
            virtual DDS::LongLong register_instance_w_timestamp (const SourceParameters_& instance_data, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long unregister_instance (const SourceParameters_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long unregister_instance_w_timestamp (const SourceParameters_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long write (const SourceParameters_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long write_w_timestamp (const SourceParameters_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long dispose (const SourceParameters_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long dispose_w_timestamp (const SourceParameters_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long writedispose (const SourceParameters_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long writedispose_w_timestamp (const SourceParameters_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long get_key_value (SourceParameters_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const SourceParameters_& instance_data) = 0;

         protected:
            SourceParameters_DataWriter () {};
            ~SourceParameters_DataWriter () {};
         private:
            SourceParameters_DataWriter (const SourceParameters_DataWriter &);
            SourceParameters_DataWriter & operator = (const SourceParameters_DataWriter &);
         };

         class SourceParameters_DataReader
         :
            virtual public DDS::DataReader
         { 
         public:
            typedef SourceParameters_DataReader_ptr _ptr_type;
            typedef SourceParameters_DataReader_var _var_type;

            static SourceParameters_DataReader_ptr _duplicate (SourceParameters_DataReader_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static SourceParameters_DataReader_ptr _narrow (DDS::Object_ptr obj);
            static SourceParameters_DataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static SourceParameters_DataReader_ptr _nil () { return 0; }
            static const char * _local_id;
            SourceParameters_DataReader_ptr _this () { return this; }

            virtual DDS::Long read (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (SourceParameters_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (SourceParameters_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (SourceParameters_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const SourceParameters_& instance) = 0;

         protected:
            SourceParameters_DataReader () {};
            ~SourceParameters_DataReader () {};
         private:
            SourceParameters_DataReader (const SourceParameters_DataReader &);
            SourceParameters_DataReader & operator = (const SourceParameters_DataReader &);
         };

         class SourceParameters_DataReaderView
         :
            virtual public DDS::DataReaderView
         { 
         public:
            typedef SourceParameters_DataReaderView_ptr _ptr_type;
            typedef SourceParameters_DataReaderView_var _var_type;

            static SourceParameters_DataReaderView_ptr _duplicate (SourceParameters_DataReaderView_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static SourceParameters_DataReaderView_ptr _narrow (DDS::Object_ptr obj);
            static SourceParameters_DataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static SourceParameters_DataReaderView_ptr _nil () { return 0; }
            static const char * _local_id;
            SourceParameters_DataReaderView_ptr _this () { return this; }

            virtual DDS::Long read (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (SourceParameters_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (SourceParameters_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (SourceParameters_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (SourceParameters_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const SourceParameters_& instance) = 0;

         protected:
            SourceParameters_DataReaderView () {};
            ~SourceParameters_DataReaderView () {};
         private:
            SourceParameters_DataReaderView (const SourceParameters_DataReaderView &);
            SourceParameters_DataReaderView & operator = (const SourceParameters_DataReaderView &);
         };

      }
   }
}




#endif 
